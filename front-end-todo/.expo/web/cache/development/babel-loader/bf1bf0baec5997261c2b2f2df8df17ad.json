{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kayzi\\\\OneDrive\\\\Desktop\\\\cross2d0-main\\\\my-project\\\\screens\\\\login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport bgImage from \"../assets/images/background.jpg\";\nimport logo from \"../assets/images/logo.png\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { emailValidator } from \"../assets/helpers/emailValidator\";\nimport { passwordValidator } from \"../assets/helpers/passwordValidator\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    WIDTH = _Dimensions$get.width;\n\nexport function LoginDashboard(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onLoginPressed = function onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    navigation.reset({\n      index: 0,\n      routes: [{\n        name: 'todolist'\n      }]\n    });\n  };\n\n  return React.createElement(ImageBackground, {\n    source: bgImage,\n    style: styles.backgroundContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.logoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: logo,\n    style: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.logoText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"AYMENE & PONCH\")), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, password.error), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    name: 'ios-person-outline',\n    size: 28,\n    color: 'rgba(255, 255, 255, 0.7)',\n    style: styles.inputIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    placeholder: 'Username',\n    placeholderTextColor: 'rgba(255, 255, 255, 0.7)',\n    underlineColorAndroid: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    name: 'lock-closed-outline',\n    size: 28,\n    color: 'rgba(255, 255, 255, 0.7)',\n    style: styles.inputIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: 'Password',\n    secureTextEntry: true,\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    placeholderTextColor: 'rgba(255, 255, 255, 0.7)',\n    underlineColorAndroid: \"transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.btnEye,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Icon, {\n    name: 'ios-eye-outline',\n    size: 26,\n    color: 'rgba(255, 255, 255, 0.7)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: styles.btnLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return navigation.navigate('todolist');\n    },\n    style: styles.text,\n    onPress: onLoginPressed,\n    mode: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return navigation.navigate('register');\n    },\n    style: styles.noAccount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Don't have an account yet?\", React.createElement(Text, {\n    style: styles.clickUnderline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \" Click here\"))), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  backgroundContainer: {\n    flex: 1,\n    width: null,\n    height: null,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 50\n  },\n  logo: {\n    width: 120,\n    height: 120\n  },\n  logoText: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 10,\n    opacity: 0.5\n  },\n  inputContainer: {\n    marginTop: 10\n  },\n  input: {\n    width: WIDTH - 55,\n    height: 45,\n    borderRadius: 45,\n    fontSize: 16,\n    paddingLeft: 45,\n    backgroundColor: 'rgba(0, 0, 0, 0.35)',\n    color: 'rgba(255, 255, 255, 0.7)',\n    marginHorizontal: 25\n  },\n  inputIcon: {\n    position: 'absolute',\n    top: 8,\n    left: 37\n  },\n  btnEye: {\n    position: 'absolute',\n    top: 8,\n    right: 37\n  },\n  btnLogin: {\n    width: WIDTH - 55,\n    height: 45,\n    borderRadius: 45,\n    backgroundColor: '#eb401a',\n    justifyContent: 'center',\n    marginTop: 20\n  },\n  text: {\n    color: 'rgba(255, 255, 255, 0.7)',\n    fontSize: 16,\n    textAlign: 'center'\n  },\n  noAccount: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center',\n    paddingTop: 20\n  },\n  clickUnderline: {\n    textDecorationLine: 'underline'\n  }\n});","map":{"version":3,"sources":["C:/Users/kayzi/OneDrive/Desktop/cross2d0-main/my-project/screens/login.js"],"names":["StatusBar","React","useState","bgImage","logo","Icon","emailValidator","passwordValidator","Dimensions","get","WIDTH","width","LoginDashboard","navigation","value","error","email","setEmail","password","setPassword","onLoginPressed","emailError","passwordError","reset","index","routes","name","styles","backgroundContainer","logoContainer","logoText","inputContainer","inputIcon","input","text","btnEye","btnLogin","navigate","noAccount","clickUnderline","StyleSheet","create","flex","height","justifyContent","alignItems","marginBottom","color","fontSize","fontWeight","marginTop","opacity","borderRadius","paddingLeft","backgroundColor","marginHorizontal","position","top","left","right","textAlign","paddingTop","textDecorationLine"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View, ImageBackground, Image, Dimensions, TextInput, TouchableOpacity } from 'react-native';\nimport bgImage from '../assets/images/background.jpg';\nimport logo from '../assets/images/logo.png';\nimport Icon from 'react-native-vector-icons/Ionicons'\nimport { emailValidator } from '../assets/helpers/emailValidator'\nimport { passwordValidator } from '../assets/helpers/passwordValidator'\n\n\nconst { width: WIDTH } = Dimensions.get('window')\n\nexport function LoginDashboard({ navigation }) {\n    const [email, setEmail] = useState({ value: '', error: '' })\n    const [password, setPassword] = useState({ value: '', error: '' })\n  \n    const onLoginPressed = () => {\n      const emailError = emailValidator(email.value)\n      const passwordError = passwordValidator(password.value)\n      if (emailError || passwordError) {\n        setEmail({ ...email, error: emailError })\n        setPassword({ ...password, error: passwordError })\n        return\n      }\n      navigation.reset({\n        index: 0,\n        routes: [{ name: 'todolist' }],\n      })\n    }\n  return (\n    <ImageBackground source={bgImage} style={styles.backgroundContainer}>\n      <View style={styles.logoContainer}>\n        <Image source={logo} style={styles.logo}></Image>\n        <Text style={styles.logoText}>AYMENE & PONCH</Text>\n      </View>\n      <Text>{password.error}</Text>\n      <View style={styles.inputContainer}>\n        <Icon name={'ios-person-outline'} size={28} color={'rgba(255, 255, 255, 0.7)'} \n        style={styles.inputIcon} />\n        <TextInput\n        style={styles.input}\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n        placeholder={'Username'}\n        placeholderTextColor={'rgba(255, 255, 255, 0.7)'}\n        underlineColorAndroid='transparent'\n      />\n      </View>\n\n      <View style={styles.inputContainer}>\n        <Icon name={'lock-closed-outline'} size={28} color={'rgba(255, 255, 255, 0.7)'} \n        style={styles.inputIcon} />\n        <TextInput\n        style={styles.input}\n        placeholder={'Password'}\n        secureTextEntry={true}\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        placeholderTextColor={'rgba(255, 255, 255, 0.7)'}\n        underlineColorAndroid='transparent'\n      />\n      \n      <TouchableOpacity style={styles.btnEye}>\n        <Icon name={'ios-eye-outline'} size={26} color={'rgba(255, 255, 255, 0.7)'}/>\n      </TouchableOpacity>\n      </View>\n      <TouchableOpacity style={styles.btnLogin}>\n      <Text \n      onPress={() => navigation.navigate('todolist')} \n      style={styles.text} \n      onPress={onLoginPressed}\n      mode=\"contained\">Login</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity>\n        <Text onPress={() => navigation.navigate('register')}\n        style={styles.noAccount}>Don't have an account yet?\n        <Text style={styles.clickUnderline}> Click here</Text></Text>\n      </TouchableOpacity>\n      <StatusBar style=\"auto\" />\n    </ImageBackground>\n  );\n  }\n\nconst styles = StyleSheet.create({\n  backgroundContainer: {\n    flex: 1,\n    width: null,\n    height: null,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  logoContainer: {\n    alignItems: 'center',\n    marginBottom: 50,\n  },\n  logo: {\n    width: 120,\n    height: 120,\n  },\n  logoText: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 10,\n    opacity: 0.5\n  },\n  inputContainer: {\n    marginTop: 10,\n  },\n  input: {\n    width: WIDTH - 55,\n    height: 45,\n    borderRadius: 45,\n    fontSize: 16,\n    paddingLeft: 45,\n    backgroundColor: 'rgba(0, 0, 0, 0.35)',\n    color: 'rgba(255, 255, 255, 0.7)',\n    marginHorizontal: 25\n  },\n  inputIcon: {\n    position: 'absolute',\n    top: 8,\n    left: 37,\n  },\n  btnEye: {\n    position: 'absolute',\n    top: 8,\n    right: 37,\n  },\n  btnLogin: {\n    width: WIDTH - 55,\n    height: 45,\n    borderRadius: 45,    \n    backgroundColor: '#eb401a',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  text: {\n    color: 'rgba(255, 255, 255, 0.7)',\n    fontSize: 16,\n    textAlign: 'center',\n  },\n  noAccount: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center',\n    paddingTop: 20,\n  },\n  clickUnderline: {\n    textDecorationLine: 'underline',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}