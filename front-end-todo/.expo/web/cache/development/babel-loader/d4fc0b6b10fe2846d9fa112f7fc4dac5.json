{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\kayzi\\\\OneDrive\\\\Desktop\\\\cross-2d0-main\\\\Front-end\\\\my-project\\\\screens\\\\genderpicker.js\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Picker } from '@react-native-picker/picker';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    WIDTH = _Dimensions$get.width;\n\nimport Icon from \"@expo/vector-icons/FontAwesome\";\n\nvar GPicker = function GPicker() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, React.createElement(Icon, {\n    name: \"sort-down\",\n    type: \"MaterialIcons\",\n    style: styles.pickerIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }), React.createElement(Picker, {\n    style: styles.picker,\n    selectedValue: selectedValue,\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"Choose gender..\",\n    value: \"choose\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Male\",\n    value: \"male\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Female\",\n    value: \"female\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"Transgender\",\n    value: \"trans\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  picker: {\n    width: 265,\n    height: 50,\n    color: 'rgba(255, 255, 255, 0.7)'\n  },\n  input: {\n    width: WIDTH - 55,\n    height: 45,\n    borderRadius: 45,\n    fontSize: 16,\n    paddingLeft: 45,\n    backgroundColor: 'rgba(0, 0, 0, 0.35)',\n    color: 'rgba(255, 255, 255, 0.7)',\n    marginHorizontal: 25\n  },\n  pickerIcon: {\n    color: 'rgba(255, 255, 255, 0.7)',\n    position: \"absolute\",\n    bottom: 15,\n    right: 15,\n    fontSize: 20,\n    zIndex: 10\n  }\n});\nexport default GPicker;","map":{"version":3,"sources":["C:/Users/kayzi/OneDrive/Desktop/cross-2d0-main/Front-end/my-project/screens/genderpicker.js"],"names":["React","useState","Picker","Dimensions","get","WIDTH","width","Icon","GPicker","selectedValue","setSelectedValue","styles","input","pickerIcon","picker","itemValue","itemIndex","StyleSheet","create","height","color","borderRadius","fontSize","paddingLeft","backgroundColor","marginHorizontal","position","bottom","right","zIndex"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAAQC,MAAR,QAAqB,6BAArB;;sBACyBC,UAAU,CAACC,GAAX,CAAe,QAAf,C;IAAVC,K,mBAAPC,K;;AACR,OAAOC,IAAP;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACsBP,QAAQ,CAAC,EAAD,CAD9B;AAAA;AAAA,MACbQ,aADa;AAAA,MACEC,gBADF;;AAGpB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,IAAI,EAAC,eAFP;AAGE,IAAA,KAAK,EAAED,MAAM,CAACE,UAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,MAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACG,MADhB;AAEE,IAAA,aAAa,EAAEL,aAFjB;AAGE,IAAA,aAAa,EAAE,uBAACM,SAAD,EAAYC,SAAZ;AAAA,aAA0BN,gBAAgB,CAACK,SAAD,CAA1C;AAAA,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKA,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,iBAAnB;AAAqC,IAAA,KAAK,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,EAME,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,MAAnB;AAA0B,IAAA,KAAK,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,QAAnB;AAA4B,IAAA,KAAK,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,MAAD,CAAQ,IAAR;AAAa,IAAA,KAAK,EAAC,aAAnB;AAAiC,IAAA,KAAK,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CANF,CADF;AAmBD,CAtBD;;AAwBA,IAAMJ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,MAAM,EAAE;AACNR,IAAAA,KAAK,EAAE,GADD;AAENa,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,KAAK,EAAE;AAHD,GADuB;AAM/BR,EAAAA,KAAK,EAAE;AACLN,IAAAA,KAAK,EAAED,KAAK,GAAG,EADV;AAELc,IAAAA,MAAM,EAAE,EAFH;AAGLE,IAAAA,YAAY,EAAE,EAHT;AAILC,IAAAA,QAAQ,EAAE,EAJL;AAKLC,IAAAA,WAAW,EAAE,EALR;AAMLC,IAAAA,eAAe,EAAE,qBANZ;AAOLJ,IAAAA,KAAK,EAAE,0BAPF;AAQLK,IAAAA,gBAAgB,EAAE;AARb,GANwB;AAgB/BZ,EAAAA,UAAU,EAAE;AACVO,IAAAA,KAAK,EAAE,0BADG;AAEVM,IAAAA,QAAQ,EAAE,UAFA;AAGVC,IAAAA,MAAM,EAAE,EAHE;AAIVC,IAAAA,KAAK,EAAE,EAJG;AAKVN,IAAAA,QAAQ,EAAE,EALA;AAMVO,IAAAA,MAAM,EAAE;AANE;AAhBmB,CAAlB,CAAf;AA0BA,eAAerB,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, StyleSheet, TouchableOpacity, Dimensions } from \"react-native\";\r\nimport {Picker} from '@react-native-picker/picker';\r\nconst { width: WIDTH } = Dimensions.get('window')\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nconst GPicker = () => {\r\n  const [selectedValue, setSelectedValue] = useState(\"\");\r\n\r\n  return (\r\n    <View style={styles.input}>\r\n      <Icon\r\n        name=\"sort-down\"\r\n        type=\"MaterialIcons\"\r\n        style={styles.pickerIcon}\r\n      />\r\n      <Picker\r\n        style={styles.picker}\r\n        selectedValue={selectedValue}\r\n        onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\r\n      > \r\n      <Picker.Item label=\"Choose gender..\" value=\"choose\" />\r\n        <Picker.Item label=\"Male\" value=\"male\" />\r\n        <Picker.Item label=\"Female\" value=\"female\" />\r\n        <Picker.Item label=\"Transgender\" value=\"trans\" />\r\n      </Picker>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  picker: {\r\n    width: 265,\r\n    height: 50,\r\n    color: 'rgba(255, 255, 255, 0.7)'\r\n  },\r\n  input: {\r\n    width: WIDTH - 55,\r\n    height: 45,\r\n    borderRadius: 45,\r\n    fontSize: 16,\r\n    paddingLeft: 45,\r\n    backgroundColor: 'rgba(0, 0, 0, 0.35)',\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    marginHorizontal: 25,\r\n  },\r\n  pickerIcon: {\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    position: \"absolute\",\r\n    bottom: 15,\r\n    right: 15,\r\n    fontSize: 20,\r\n    zIndex: 10,\r\n },\r\n});\r\n\r\nexport default GPicker;\r\n"]},"metadata":{},"sourceType":"module"}