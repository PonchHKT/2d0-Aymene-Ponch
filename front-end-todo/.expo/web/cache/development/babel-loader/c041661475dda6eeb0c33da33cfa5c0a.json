{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kayzi\\\\OneDrive\\\\Desktop\\\\cross-2d0-main\\\\Front-end\\\\my-project\\\\screens\\\\todolist.js\";\nimport React, { useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Task from \"./tasks\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nexport function todolist() {\n  var _this = this;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      task = _useState2[0],\n      setTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      taskItems = _useState4[0],\n      setTaskItems = _useState4[1];\n\n  var handleAddTask = function handleAddTask() {\n    Keyboard.dismiss();\n    setTaskItems([].concat(_toConsumableArray(taskItems), [task]));\n    setTask(null);\n  };\n\n  var completeTask = function completeTask(index) {\n    var itemsCopy = _toConsumableArray(taskItems);\n\n    itemsCopy.splice(index, 1);\n    setTaskItems(itemsCopy);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.taskWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.sectionTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Today's tasks\"), React.createElement(View, {\n    style: styles.items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, taskItems.map(function (item, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      onPress: function onPress() {\n        return completeTask();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }, React.createElement(Task, {\n      text: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }\n    }));\n  }))), React.createElement(KeyboardAvoidingView, {\n    style: styles.writeTaskWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: 'Write a task',\n    value: task,\n    onChangeText: function onChangeText(text) {\n      return setTask(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.btnPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    onPress: function onPress() {\n      return handleAddTask();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Login\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#E8EAED'\n  },\n  tasksWrapper: {\n    paddingTop: 80,\n    paddingHorizontal: 20\n  },\n  sectionTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: 40,\n    marginLeft: 20\n  },\n  items: {\n    marginTop: 30\n  },\n  writeTaskWrapper: {\n    position: 'absolute',\n    bottom: 30,\n    right: 35,\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  input: {\n    paddingVertical: 15,\n    paddingHorizontal: 15,\n    backgroundColor: 'white',\n    borderRadius: 60,\n    borderColor: '#C0C0C0',\n    borderWidth: 1,\n    width: 250\n  },\n  addWrapper: {\n    width: 60,\n    height: 60,\n    right: 15,\n    top: 325,\n    position: 'absolute',\n    alignSelf: 'flex-end',\n    backgroundColor: 'white',\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#C0C0C0',\n    borderWidth: 1\n  },\n  btnPlus: {\n    height: 45,\n    borderRadius: 45,\n    backgroundColor: '#eb401a',\n    justifyContent: 'center',\n    marginTop: 20,\n    position: 'absolute',\n    bottom: 0,\n    alignSelf: 'flex-end',\n    flexDirection: 'row'\n  },\n  text: {\n    color: 'red',\n    fontSize: 16,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/kayzi/OneDrive/Desktop/cross-2d0-main/Front-end/my-project/screens/todolist.js"],"names":["React","useState","Task","Icon","todolist","task","setTask","taskItems","setTaskItems","handleAddTask","Keyboard","dismiss","completeTask","index","itemsCopy","splice","styles","container","taskWrapper","sectionTitle","items","map","item","writeTaskWrapper","input","text","btnPlus","StyleSheet","create","flex","backgroundColor","tasksWrapper","paddingTop","paddingHorizontal","fontSize","fontWeight","marginTop","marginLeft","position","bottom","right","width","flexDirection","justifyContent","alignItems","paddingVertical","borderRadius","borderColor","borderWidth","addWrapper","height","top","alignSelf","color","textAlign"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { KeyboardAvoidingView, StyleSheet, Text, View, TextInput, TouchableOpacity, Keyboard } from 'react-native';\r\nimport Task from './tasks';\r\nimport Icon from 'react-native-vector-icons/Ionicons'\r\n\r\nexport function todolist() {\r\n    const [task, setTask] = useState();\r\n    const [taskItems, setTaskItems] = useState([]);\r\n\r\n    const handleAddTask = () => {\r\n        Keyboard.dismiss();\r\n        setTaskItems([...taskItems, task])\r\n        setTask(null);\r\n    }\r\n\r\n    const completeTask = (index) => {\r\n        let itemsCopy = [...taskItems];\r\n        itemsCopy.splice(index, 1);\r\n        setTaskItems(itemsCopy);\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n\r\n            <View style={styles.taskWrapper}>\r\n            <Text style={styles.sectionTitle}>Today's tasks</Text>\r\n\r\n            <View style={styles.items}>\r\n                {\r\n                    taskItems.map((item, index) => {\r\n                        return (\r\n                            <TouchableOpacity key={index} onPress={() => completeTask()}>\r\n                                <Task text={item} />\r\n                            </TouchableOpacity>\r\n                        )\r\n                    })\r\n                }\r\n            </View>\r\n        </View>\r\n\r\n    <KeyboardAvoidingView\r\n    style={styles.writeTaskWrapper}>\r\n\r\n        <TextInput style={styles.input} placeholder={'Write a task'} value={task} onChangeText={text => setTask(text)} /> \r\n\r\n    </KeyboardAvoidingView>\r\n    \r\n    <View>\r\n    <TouchableOpacity style={styles.btnPlus} >\r\n      <Text style={styles.text} onPress={() => handleAddTask()} >Login</Text>\r\n      </TouchableOpacity>\r\n      </View>\r\n      </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#E8EAED'\r\n    },\r\n    tasksWrapper: {\r\n        paddingTop: 80,\r\n        paddingHorizontal: 20,\r\n    },\r\n    sectionTitle: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginTop: 40,\r\n        marginLeft: 20,\r\n    },\r\n    items: {\r\n        marginTop: 30,\r\n    },\r\n    writeTaskWrapper: {\r\n        position: 'absolute',\r\n        bottom: 30,\r\n        right: 35,\r\n        width: '100%', \r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    },\r\n    input: {\r\n        paddingVertical: 15,\r\n        paddingHorizontal: 15,\r\n        backgroundColor: 'white',\r\n        borderRadius: 60,\r\n        borderColor: '#C0C0C0',\r\n        borderWidth: 1,\r\n        width: 250,\r\n    },\r\n    addWrapper: {\r\n        width: 60,\r\n        height: 60,\r\n        right: 15,\r\n        top: 325,\r\n        position: 'absolute',\r\n        alignSelf: 'flex-end',\r\n        backgroundColor: 'white',\r\n        borderRadius: 60,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderColor: '#C0C0C0',\r\n        borderWidth: 1,\r\n    },\r\n    btnPlus: {\r\n        height: 45,\r\n        borderRadius: 45,    \r\n        backgroundColor: '#eb401a',\r\n        justifyContent: 'center',\r\n        marginTop: 20,\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        alignSelf: 'flex-end',\r\n        flexDirection: 'row',\r\n      }, \r\n      text: {\r\n        color: 'red',\r\n        fontSize: 16,\r\n        textAlign: 'center',\r\n      },\r\n});"]},"metadata":{},"sourceType":"module"}